// Helper t·∫°o input
export function createInput(placeholder, type = "text") {
    const input = document.createElement("input");
    input.type = type;
    input.placeholder = placeholder;
    input.style.padding = "6px 8px";
    input.style.fontSize = "14px";
    input.style.border = "1px solid #aaa";
    input.style.borderRadius = "4px";
    input.style.width = "50px"; // üëà ƒê·ªô r·ªông r√∫t g·ªçn l·∫°i m·ªôt n·ª≠a
    input.style.flex = "1";
    return input;
}
  
// Helper t·∫°o button
export function createButton(text, onClick) {
    const btn = document.createElement("button");
    btn.textContent = text;
    btn.onclick = onClick;
  
    btn.style.margin = "1px";
    btn.style.padding = "8px 12px";
    btn.style.fontSize = "14px";
    btn.style.border = "1px solid #888";
    btn.style.borderRadius = "4px";
    btn.style.width = "160px";
    btn.style.backgroundColor = "#f0f0f0";
    btn.style.cursor = "pointer";
    btn.style.transition = "all 0.2s ease";
  
    // üí´ Hover effect
    btn.onmouseover = () => {
        btn.style.backgroundColor = "#007BFF";
        btn.style.color = "white";
        btn.style.borderColor = "#0056b3";
    };
  
    btn.onmouseout = () => {
        btn.style.backgroundColor = "#f0f0f0";
        btn.style.color = "black";
        btn.style.borderColor = "#888";
    };
  
    return btn;
}
  
  // Helper t·∫°o ƒë∆∞·ªùng k·∫ª ngang
  export function createHR() {
    const hr = document.createElement("hr");
    hr.style.margin = "4px 0";
    return hr;
  }
  
  // H√†m hi·ªán m√£ gi·∫£ gi·∫£i thu·∫≠t
  export function showPseudo(code) {
    const pre = document.getElementById("pseudo-code");
    if (pre) pre.innerText = code;
  }

  // H√†m ƒë·ªçc n·ªôi dung file .txt
  export async function showFileTxt(fileUrl) {
    try {
        const response = await fetch(fileUrl);
        const text = await response.text();
        showPseudo(text); // Gi·∫£ s·ª≠ showPseudo ƒë√£ ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a
    } catch (error) {
        console.error("L·ªói khi ƒë·ªçc file txt:", error);
    }
  }

  // H√†m hi·ªÉn th·ªã n·ªôi dung file gi·ªõi thi·ªáu trong Dialog b·ªï sung
  export async function showDialog(fileOrText) {
    let text = "";

    try {
        // N·∫øu l√† URL k·∫øt th√∫c b·∫±ng .txt ‚Üí fetch nh∆∞ c≈©
        if (typeof fileOrText === "string" && (fileOrText.startsWith("http") || fileOrText.endsWith(".txt"))) {
            const response = await fetch(fileOrText);
            text = await response.text();
        } 
        // N·∫øu l√† module .js ‚Üí truy·ªÅn th·∫≥ng v√†o nh∆∞ chu·ªói
        else if (typeof fileOrText === "string") {
            text = fileOrText;
        } 
        // N·∫øu l√† ki·ªÉu d·ªØ li·ªáu kh√¥ng x√°c ƒë·ªãnh
        else {
            throw new Error("Kh√¥ng th·ªÉ hi·ªÉn th·ªã n·ªôi dung t·ª´ ki·ªÉu d·ªØ li·ªáu kh√¥ng h·ª£p l·ªá.");
        }

        let dialog = document.getElementById('my-dialog');

        if (!dialog) {
            dialog = document.createElement('dialog');
            dialog.id = 'my-dialog';
            dialog.style.width = '60%';
            dialog.style.maxWidth = '100%';
            dialog.style.padding = '0';
            dialog.style.border = '1px solid #ccc';
            dialog.style.borderRadius = '5px';
            dialog.style.position = 'fixed';
            dialog.style.top = '50%';
            dialog.style.left = '50%';
            dialog.style.transform = 'translate(-50%, -50%)';
            dialog.style.overflow = 'hidden';

            document.body.appendChild(dialog);
        } else {
            dialog.innerHTML = '';
        }

        const titleBar = document.createElement('div');
        titleBar.style.padding = '10px';
        titleBar.style.backgroundColor = '#f0f0f0';
        titleBar.style.fontWeight = 'bold';
        titleBar.textContent = 'Gi·ªõi thi·ªáu v·ªÅ ·ª©ng d·ª•ng';
        dialog.appendChild(titleBar);

        const content = document.createElement('div');
        content.style.padding = '20px';
        content.style.overflowY = 'auto';
        content.style.maxHeight = '400px';
        const pre = document.createElement('pre');
        pre.style.whiteSpace = 'pre-wrap';
        pre.style.wordBreak = 'break-word';
        pre.textContent = text;
        content.appendChild(pre);
        dialog.appendChild(content);

        const buttonContainer = document.createElement('div');
        buttonContainer.style.padding = '10px';
        buttonContainer.style.display = 'flex';
        buttonContainer.style.justifyContent = 'flex-end';
        buttonContainer.style.backgroundColor = '#f0f0f0';

        const okButton = createButton("ƒê√≥ng", () => dialog.close());
        okButton.style.width = "100px";
        buttonContainer.appendChild(okButton);
        dialog.appendChild(buttonContainer);

        dialog.showModal();
    } catch (error) {
        console.error("L·ªói khi hi·ªÉn th·ªã n·ªôi dung:", error);
        alert("Kh√¥ng th·ªÉ hi·ªÉn th·ªã n·ªôi dung.");
    }
}

//   export async function showDialog(fileUrl) {
//     try {
//         const response = await fetch(fileUrl);
//         const text = await response.text();

//         let dialog = document.getElementById('my-dialog');

//         if (!dialog) {
//             // T·∫°o dialog box n·∫øu ch∆∞a t·ªìn t·∫°i
//             dialog = document.createElement('dialog');
//             dialog.id = 'my-dialog';
//             dialog.style.width = '60%';
//             dialog.style.maxWidth = '100%';
//             dialog.style.padding = '0'; // Lo·∫°i b·ªè padding m·∫∑c ƒë·ªãnh
//             dialog.style.border = '1px solid #ccc';
//             dialog.style.borderRadius = '5px';
//             dialog.style.position = 'fixed'; // C·ªë ƒë·ªãnh v·ªã tr√≠
//             dialog.style.top = '50%';
//             dialog.style.left = '50%';
//             dialog.style.transform = 'translate(-50%, -50%)'; // CƒÉn gi·ªØa ch√≠nh x√°c
//             dialog.style.overflow = 'hidden'; // ·∫®n thanh cu·ªôn th·ª´a

//             document.body.appendChild(dialog); // Th√™m v√†o body (ch·ªâ khi t·∫°o m·ªõi)
//         } else {
//             dialog.innerHTML = ''; // Reset n·ªôi dung (n·∫øu c·∫ßn)
//         }

//         // Th√™m ti√™u ƒë·ªÅ
//         const titleBar = document.createElement('div');
//         titleBar.style.padding = '10px';
//         titleBar.style.backgroundColor = '#f0f0f0';
//         titleBar.style.fontWeight = 'bold';
//         titleBar.textContent = 'Gi·ªõi thi·ªáu v·ªÅ ·ª©ng d·ª•ng';
//         dialog.appendChild(titleBar);

//         // Th√™m n·ªôi dung
//         const content = document.createElement('div');
//         content.style.padding = '20px';
//         content.style.overflowY = 'auto'; // Th√™m thanh cu·ªôn khi c·∫ßn
//         content.style.maxHeight = '400px'; // Chi·ªÅu cao t·ªëi ƒëa cho n·ªôi dung
//         const pre = document.createElement('pre');
//         pre.style.whiteSpace = 'pre-wrap';
//         pre.style.wordBreak = 'break-word';
//         pre.textContent = text;
//         content.appendChild(pre);
//         dialog.appendChild(content);

//         // Th√™m n√∫t OK
//         const buttonContainer = document.createElement('div');
//         buttonContainer.style.padding = '10px';
//         buttonContainer.style.display = 'flex'; // S·ª≠ d·ª•ng Flexbox cho buttonContainer
//         buttonContainer.style.justifyContent = 'flex-end'; // CƒÉn ph·∫£i n√∫t
//         buttonContainer.style.backgroundColor = '#f0f0f0';

//         const okButton = createButton("ƒê√≥ng", () => {dialog.close();});
//         okButton.style.width = "100px";
//         buttonContainer.appendChild(okButton);
//         dialog.appendChild(buttonContainer);

//         dialog.showModal(); // Hi·ªÉn th·ªã dialog

//     } catch (error) {
//         console.error("L·ªói khi ƒë·ªçc file txt:", error);
//         alert("Kh√¥ng th·ªÉ t·∫£i n·ªôi dung file.");
//     }
// }
